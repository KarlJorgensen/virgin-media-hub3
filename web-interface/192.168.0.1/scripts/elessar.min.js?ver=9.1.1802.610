!
function (t) {
	return "object" == typeof exports ? module.exports = t(require("jquery")) : "function" == typeof define && define.amd ? define(["jquery"], t) : window.RangeBar = t(window.jQuery)
}(function (t) {
	return function e(t, i, n) {
		function s(r, o) {
			if (!i[r]) {
				if (!t[r]) {
					var l = "function" == typeof require && require;
					if (!o && l) return l(r, !0);
					if (a) return a(r, !0);
					throw new Error("Cannot find module '" + r + "'")
				}
				var h = i[r] = {
					exports: {}
				};
				t[r][0].call(h.exports, function (e) {
					var i = t[r][1][e];
					return s(i ? i : e)
				}, h, h.exports, e, t, i, n)
			}
			return i[r].exports
		}
		for (var a = "function" == typeof require && require, r = 0; r < n.length; r++) s(n[r]);
		return s
	}({
		1: [function (e, i) {
			var n = e("estira"),
				s = e("./raf"),
				a = (Object.prototype.hasOwnProperty, n.extend({
					initialize: function (e) {
						this.$el = t(e), this.$data = {}, this.$el.data("element", this)
					},
					draw: function (t) {
						var e = this;
						return this.drawing ? this.$el : (s(function () {
							e.drawing = !1, e.$el.css(t)
						}), this.drawing = !0, this.$el)
					},
					on: function () {
						return this.$el.on.apply(this.$el, arguments), this
					},
					one: function () {
						return this.$el.one.apply(this.$el, arguments), this
					},
					off: function () {
						return this.$el.off.apply(this.$el, arguments), this
					},
					trigger: function () {
						return this.$el.trigger.apply(this.$el, arguments), this
					},
					remove: function () {
						this.$el.remove()
					},
					detach: function () {
						this.$el.detach()
					},
					data: function (e, i) {
						var n = e;
						if ("string" == typeof e) {
							if ("undefined" == typeof i) return this.$data[e];
							n = {}, n[e] = i
						}
						return t.extend(this.$data, n), this
					}
				}));
			i.exports = a
		},
		{
			"./raf": 6,
			estira: 10
		}],
		2: [function (t, e) {
			var i = Object.prototype.hasOwnProperty;
			e.exports = function (t, e) {
				return i.call(e, t) ? e[t] : e.originalEvent && i.call(e.originalEvent, "touches") ? e.originalEvent.touches[0][t] : 0
			}
		},
		{}],
		3: [function (t, e) {
			var i = t("./element"),
				n = t("./vertical"),
				s = i.extend(n).extend({
					initialize: function a(t) {
						a.super$.call(this, '<div class="elessar-indicator">'), t.indicatorClass && this.$el.addClass(t.indicatorClass), t.value && this.val(t.value), this.options = t
					},
					val: function (t) {
						return t && (this.draw(this.isVertical() ? {
							top: 100 * t + "%"
						} : {
							left: 100 * t + "%"
						}), this.value = t), this.value
					}
				});
			e.exports = s
		},
		{
			"./element": 1,
			"./vertical": 9
		}],
		4: [function (t, e) {
			var i = t("./element.js"),
				n = i.extend({
					initialize: function s(t) {
						s.super$.call(this, '<div class="elessar-label">'), this.$el.css(t.perant.edge("start"), 100 * t.value + "%"), this.$el.text("function" == typeof t.label ? t.label.call(this, t.perant.normalise(t.value)) : "string" == typeof t.label ? t.label : t.perant.normalise(t.value))
					}
				});
			e.exports = n
		},
		{
			"./element.js": 1
		}],
		5: [function (e, i) {
			var n = e("./range"),
				s = e("./raf"),
				a = n.extend({
					initialize: function r(e) {
						r.super$.call(this, t.extend({
							readonly: !0,
							label: "+"
						}, e)), this.$el.addClass("elessar-phantom");
						var add = xlate("Add");
						var i = document.getElementById("phantom-svg"),
							n = i.contentDocument,
							s = n.getElementById("Layer_1"),
							a = s.cloneNode(!0);
							o = a.querySelector("path:first-child");
						o.style.opacity = "0.6", t.each(a.querySelectorAll("rect"), function (t, e) {
							e.setAttribute("fill", "#CCCCCC")
						}), a.setAttribute("class", "phantom-handle"), this.$el.append(a), this.$el.append('<label class="phantom-label-handle">'+add+'</label>'), this.on("mousedown.elessar touchstart.elessar", t.proxy(this.mousedown, this))
					},
					mousedown: function (t) {
						if (1 === t.which) {
							var e = (t.pageX, this.options.perant.addRange(this.val()));
							this.remove(), this.options.perant.trigger("addrange", [e.val(), e]), s(function () {
								e.$el.find(".elessar-handle:first-child").trigger(t.type)
							})
						}
					},
					removePhantom: function () {
						this.remove()
					}
				});
			i.exports = a
		},
		{
			"./raf": 6,
			"./range": 7
		}],
		6: [function (t, e) {
			for (var i = 0, n = ["webkit", "moz"], s = window.requestAnimationFrame, a = 0; a < n.length && !window.requestAnimationFrame; ++a) s = window[n[a] + "RequestAnimationFrame"];
			s || (s = function (t) {
				var e = (new Date).getTime(),
					n = Math.max(0, 16 - (e - i)),
					s = window.setTimeout(function () {
						t(e + n)
					}, n);
				return i = e + n, s
			}), e.exports = s
		},
		{}],
		7: [function (e, i) {
			var n = e("./element"),
				s = e("./eventprop"),
				a = e("./vertical"),
				r = n.extend(a).extend({
					initialize: function o(e) {
						var remove = xlate("Remove");
						var i = this;
						o.super$.call(this, '<div class="elessar-range"><img src="../skins/lgi/css/images/slider-handle-remove.svg" class="delete-range"/><label class="label-delete">'+remove+'</label>'), this.options = e, this.perant = e.perant, this.options.rangeClass && this.$el.addClass(this.options.rangeClass), this.readonly() ? this.$el.addClass("elessar-readonly") : (this.$el.prepend('<label class="label-handle"></label>').append('<label class="label-handle"></label>'), this.$el.prepend('<img src="../skins/lgi/css/images/slider-handle.svg" class="elessar-handle"/>').append('<img src="../skins/lgi/css/images/slider-handle.svg" class="elessar-handle"/>'), this.on("mouseenter.elessar touchstart.elessar", t.proxy(this.removePhantom, this)), this.on("mousedown.elessar touchstart.elessar", t.proxy(this.mousedown, this)), this.on("mouseover.elessar touchstart.elessar", t.proxy(this.mouseover, this)), this.on("dblclick", t.proxy(this.dblclick, this))), "function" == typeof this.options.label ? this.on("changing", function (e, n) {
							i.writeLabel(i.options.label.call(i, n.map(t.proxy(i.perant.normalise, i.perant))))
						}) : this.writeLabel(this.options.label), this.range = [], this.hasChanged = !1, this.options.value && this.val(this.options.value)
					},
					writeLabel: function () {},
					isVertical: function () {
						return this.perant.options.vertical
					},
					removePhantom: function () {
						this.perant.removePhantom()
					},
					readonly: function () {
						return "function" == typeof this.options.readonly ? this.options.readonly.call(this.perant, this) : this.options.readonly
					},
					val: function (e, i) {
						function n(t) {
							return Math.round(t / o.options.snap) * o.options.snap
						}
						if ("undefined" == typeof e) return this.range;
						i = t.extend({}, {
							dontApplyDelta: !1,
							trigger: !0
						}, i || {});
						var s = this.perant.nextRange(this.$el),
							a = this.perant.prevRange(this.$el),
							r = e[1] - e[0],
							o = this;
						if (this.options.snap && (e = e.map(n), r = n(r)), s && s.val()[0] <= e[1] && a && a.val()[1] >= e[0] && (e[1] = s.val()[0], e[0] = a.val()[1]), s && s.val()[0] < e[1] && (!this.perant.options.allowSwap || s.val()[1] >= e[0] ? (e[1] = s.val()[0], i.dontApplyDelta || (e[0] = e[1] - r)) : this.perant.repositionRange(this, e)), a && a.val()[1] > e[0] && (!this.perant.options.allowSwap || a.val()[0] <= e[1] ? (e[0] = a.val()[1], i.dontApplyDelta || (e[1] = e[0] + r)) : this.perant.repositionRange(this, e)), e[1] >= 1 && (e[1] = 1, i.dontApplyDelta || (e[0] = 1 - r)), e[0] <= 0 && (e[0] = 0, i.dontApplyDelta || (e[1] = r)), this.perant.options.bound) {
							var l = this.perant.options.bound(this);
							l && (l.upper && e[1] > this.perant.abnormalise(l.upper) && (e[1] = this.perant.abnormalise(l.upper), i.dontApplyDelta || (e[0] = e[1] - r)), l.lower && e[0] < this.perant.abnormalise(l.lower) && (e[0] = this.perant.abnormalise(l.lower), i.dontApplyDelta || (e[1] = e[0] + r)))
						}
						if (this.range[0] === e[0] && this.range[1] === e[1]) return this.$el;
						this.range = e;
						var o = this;
						o.$el.find(".label-handle").each(function (t, e) {
							var i = Math.ceil(o.range[t] * o.perant.options.max);
							10 > i ? i = "0" + i + ":00" : i += ":00", e.textContent = i
						}), i.trigger && (this.$el.triggerHandler("changing", [e, this.$el]), this.hasChanged = !0);
						var h = 100 * e[0] + "%",
							p = 100 * (e[1] - e[0]) + "%";
						return this.draw(this.perant.options.vertical ? {
							top: h,
							minHeight: p
						} : {
							left: h,
							minWidth: p
						}), this
					},
					mouseover: function (t) {
						var r = this.range[1] - this.range[0];
						$(".elessar-range").mouseout(function(e){                
							$(this).children(".label-delete").hide();  
							$(this).find(".delete-range").hide();              
						});
						$(".elessar-range").mouseover(function(e){                
							$(this).children(".label-delete").show(); 
							$(this).find(".delete-range").show();   
							if(r < 0.125){
									$(this).find(".delete-range").css("-ms-transform","rotate(180deg)").css("-webkit-transform","rotate(180deg)").css("transform","rotate(180deg)").css("margin","-5px auto 0").css("position", "relative").css("z-index","99999");
									$(this).find(".label-delete").css("position", "relative").css("z-index","99999").css("margin-top","-20px");
								}else{
									$(this).find(".delete-range").css("-ms-transform","rotate(0deg)").css("-webkit-transform","rotate(0deg)").css("transform","rotate(0deg)").css("margin","-24px auto 0");;
									$(this).find(".label-delete").css("margin-top","-45px");
								}
						});			
					},
					dblclick: function (t) {
						t.stopPropagation(), t.preventDefault();
						var e = this;
						this.$el.addClass("elessar-delete-confirm"), this.deleteConfirm = !0, this.deleteTimeout = setTimeout(function () {
							e.$el.removeClass("elessar-delete-confirm"), e.deleteConfirm = !1
						}, this.perant.options.deleteTimeout), this.deleteConfirm && (this.perant.removeRange(this), clearTimeout(this.deleteTimeout))
					},
					mousedown: function (e) {
						if (e.stopPropagation(), e.preventDefault(), this.hasChanged = !1, !(e.which > 1)) {
							var i = e.target;
							t(i).is(".elessar-handle:first-child") ? (t("body").addClass("elessar-resizing").toggleClass("elessar-resizing-vertical", this.isVertical()), t(document).on("mousemove.elessar touchmove.elessar", this.resizeStart(e))) : t(i).is(".elessar-handle:last-child") ? (t("body").addClass("elessar-resizing").toggleClass("elessar-resizing-vertical", this.isVertical()), t(document).on("mousemove.elessar touchmove.elessar", this.resizeEnd(e))) : (t("body").addClass("elessar-dragging").toggleClass("elessar-dragging-vertical", this.isVertical()), t(document).on("mousemove.elessar touchmove.elessar", this.drag(e)));
							var n = this;
							t(document).one("mouseup.elessar touchend.elessar", function (e) {
								e.stopPropagation(), e.preventDefault(), n.hasChanged && !n.swapping && n.trigger("change", [n.range, n.$el]), n.swapping = !1, t(document).off("mouseup.elessar mousemove.elessar touchend.elessar touchmove.elessar"), t("body").removeClass("elessar-resizing elessar-dragging elessar-resizing-vertical elessar-dragging-vertical")
							})
						}
					},
					drag: function (t) {
						var e = this,
							i = this.startProp("offset"),
							n = (this.startProp("position"), s(this.ifVertical("clientY", "clientX"), t));
						return mouseOffset = n ? n - i : 0, beginSize = this.totalSize(), perant = this.options.perant, perantStart = perant.startProp("offset"), perantSize = perant.totalSize(), function (t) {
							t.stopPropagation(), t.preventDefault();
							var i = s(e.ifVertical("clientY", "clientX"), t);
							if (i) {
								var n = i - perantStart - mouseOffset;
								if (n >= 0 && perantSize - beginSize >= n) {
									var a = n / perantSize - e.range[0];
									e.val([n / perantSize, e.range[1] + a])
								} else mouseOffset = i - e.startProp("offset")
							}
						}
					},
					resizeEnd: function (e) {
						var i = this,
							n = this.startProp("offset"),
							a = this.startProp("position"),
							r = (s(this.ifVertical("clientY", "clientX"), e), this.totalSize(), this.options.perant),
							o = (r.startProp("offset"), r.totalSize()),
							l = this.options.minSize * o;
						return function (e) {
							var r = "touchmove" === e.type ? "touchend" : "mouseup",
								h = "touchmove" === e.type ? "touchstart" : "mousedown";
							e.stopPropagation(), e.preventDefault();
							var p = s(i.ifVertical("clientY", "clientX"), e),
								u = p - n;
							p && (u > o - a && (u = o - a), u >= l ? i.val([i.range[0], i.range[0] + u / o], {
								dontApplyDelta: !0
							}) : 10 >= u && (i.swapping = !0, t(document).trigger(r + ".elessar"), i.$el.find(".elessar-handle:first-child").trigger(h + ".elessar")))
						}
					},
					resizeStart: function (e) {
						var i = this,
							n = this.startProp("offset"),
							a = this.startProp("position"),
							r = s(this.ifVertical("clientY", "clientX"), e),
							o = r ? r - n : 0,
							l = this.totalSize(),
							h = this.options.perant,
							p = h.startProp("offset"),
							u = h.totalSize(),
							c = this.options.minSize * u;
						return function (e) {
							var n = "touchmove" === e.type ? "touchend" : "mouseup",
								r = "touchmove" === e.type ? "touchstart" : "mousedown";
							e.stopPropagation(), e.preventDefault();
							var h = s(i.ifVertical("clientY", "clientX"), e),
								f = h - p - o,
								d = a + l - f;
							h && (0 > f && (f = 0, d = a + l), d >= c ? i.val([f / u, i.range[1]], {
								dontApplyDelta: !0
							}) : 10 >= d && (i.swapping = !0, t(document).trigger(n + ".elessar"), i.$el.find(".elessar-handle:last-child").trigger(r + ".elessar")))
						}
					}
				});
			i.exports = r
		},
		{
			"./element": 1,
			"./eventprop": 2,
			"./vertical": 9
		}],
		8: [function (e, i) {
			var n = e("./element"),
				s = e("./range"),
				a = e("./phantom"),
				r = e("./indicator"),
				o = e("./eventprop"),
				l = e("./vertical"),
				h = e("./mark.js"),
				p = n.extend(l).extend({
					initialize: function u(e) {
						if (e = e || {}, u.super$.call(this, '<div class="elessar-rangebar">'), this.options = t.extend({}, p.defaults, e), this.options.min = this.options.valueParse(this.options.min), this.options.max = this.options.valueParse(this.options.max), this.options.barClass && this.$el.addClass(this.options.barClass), this.options.vertical && this.$el.addClass("elessar-vertical"), this.ranges = [], this.on("mousemove.elessar touchmove.elessar", t.proxy(this.mousemove, this)), this.on("mouseleave.elessar touchleave.elessar", t.proxy(this.removePhantom, this)), e.values && this.setVal(e.values), e.bgLabels && (e.bgMark = {
							count: e.bgLabels
						}), e.bgMark) if (this.$markContainer = t('<div class="elessar-labels">').appendTo(this.$el), e.bgMark.count) for (var i = 0; i < e.bgMark.count; ++i) this.$markContainer.append(new h({
							label: e.bgMark.label,
							value: i / e.bgMark.count,
							perant: this
						}).$el);
						else if (e.bgMark.interval) for (var i = this.abnormalise(this.options.min); i < this.abnormalise(this.options.max); i += this.abnormalise(e.bgMark.interval)) this.$markContainer.append(new h({
							label: e.bgMark.label,
							value: i,
							perant: this
						}).$el);
						var n = this;
						if (e.indicator) {
							var s = this.indicator = new r({
								perant: this,
								vertical: this.options.vertical,
								indicatorClass: e.indicatorClass
							});
							s.val(this.abnormalise(e.indicator(this, s, function () {
								s.val(n.abnormalise(e.indicator(n, s)))
							}))), this.$el.append(s.$el)
						}
					},
					normaliseRaw: function (t) {
						return this.options.min + t * (this.options.max - this.options.min)
					},
					normalise: function (t) {
						return this.options.valueFormat(this.normaliseRaw(t))
					},
					abnormaliseRaw: function (t) {
						return (t - this.options.min) / (this.options.max - this.options.min)
					},
					abnormalise: function (t) {
						return this.abnormaliseRaw(this.options.valueParse(t))
					},
					findGap: function (t) {
						var e = 0;
						return this.ranges.forEach(function (i, n) {
							i.val()[0] < t[0] && i.val()[1] < t[1] && (e = n + 1)
						}), e
					},
					insertRangeIndex: function (t, e, i) {
						i || this.ranges.splice(e, 0, t), this.ranges[e - 1] ? this.ranges[e - 1].$el.after(t.$el) : this.$el.prepend(t.$el)
					},
					addRange: function (t, e) {
						var i = s({
							perant: this,
							snap: this.options.snap ? this.abnormaliseRaw(this.options.snap + this.options.min) : null,
							label: this.options.label,
							rangeClass: this.options.rangeClass,
							minSize: this.options.minSize ? this.abnormaliseRaw(this.options.minSize + this.options.min) : null,
							readonly: this.options.readonly,
							htmlLabel: this.options.htmlLabel
						});
						this.options.data && i.data(this.options.data.call(i, this)), e && i.data(e), this.insertRangeIndex(i, this.findGap(t)), i.val(t);
						var n = this;
						return i.on("changing", function (t, e, i) {
							t.stopPropagation(), n.trigger("changing", [n.val(), i])
						}).on("change", function (t, e, i) {
							t.stopPropagation(), n.trigger("change", [n.val(), i])
						}), i
					},
					prevRange: function (t) {
						var e = t.index();
						return e >= 0 ? this.ranges[e - 1] : void 0
					},
					nextRange: function (t) {
						var e = t.index();
						return e >= 0 ? this.ranges[t instanceof a ? e : e + 1] : void 0
					},
					setVal: function (e) {
						if (this.ranges.length > e.length) {
							for (var i = e.length - 1, n = this.ranges.length - 1; n > i; --n) this.removeRange(n);
							this.ranges.length = e.length
						}
						var s = this;
						return e.forEach(function (e, i) {
							s.ranges[i] ? s.ranges[i].val(e.map(t.proxy(s.abnormalise, s))) : s.addRange(e.map(t.proxy(s.abnormalise, s)))
						}), this
					},
					val: function (e) {
						var i = this;
						return "undefined" == typeof e ? this.ranges.map(function (e) {
							return e.val().map(t.proxy(i.normalise, i))
						}) : (this.readonly() || this.setVal(e), this)
					},
					removePhantom: function () {
						this.phantom && (this.phantom.removePhantom(), this.phantom = null)
					},
					removeRange: function (t, e, i) {
						t instanceof s && (t = this.ranges.indexOf(t)), this.ranges.splice(t, 1)[0][i ? "detach" : "remove"](), e || this.trigger("change", [this.val()])
					},
					repositionRange: function (t, e) {
						this.removeRange(t, !0, !0), this.insertRangeIndex(t, this.findGap(e))
					},
					calcGap: function (t) {
						var e = this.ranges[t - 1] ? this.ranges[t - 1].val()[1] : 0,
							i = this.ranges[t] ? this.ranges[t].val()[0] : 1;
						return this.normaliseRaw(i) - this.normaliseRaw(e)
					},
					readonly: function () {
						return "function" == typeof this.options.readonly ? this.options.readonly.call(this) : this.options.readonly
					},
					mousemove: function (e) {
						var i = this.options.minSize ? this.abnormaliseRaw(this.options.minSize + this.options.min) : .05,
							n = o(this.ifVertical("pageY", "pageX"), e),
							s = (n - this.startProp("offset")) / this.totalSize() - i / 2;
						
						if (this.options.multipleMinSize) {
							if (s>0.94) { 
								this.options.minSize = this.options.endBoundaryMinSize; 
								$("#Layer_1.phantom-handle").attr("class", "phantom-handle phantom-handle1");
								$("label.phantom-label-handle").attr("class", "phantom-label-handle phantom-label-handle1");
							} else { 
								this.options.minSize = this.options.otherMinSize;
								$("#Layer_1.phantom-handle").attr("class", "phantom-handle");
								$("label.phantom-label-handle").attr("class", "phantom-label-handle");
							}
						}
						i = this.options.minSize ? this.abnormaliseRaw(this.options.minSize + this.options.min) : .05,
						s = (n - this.startProp("offset")) / this.totalSize() - i / 2;
						
						if ((e.target === e.currentTarget || (s>0.94)) && this.ranges.length < this.options.maxRanges && !t("body").is(".elessar-dragging, .elessar-resizing") && !this.readonly()) {
							this.phantom || (this.phantom = a({
								perant: this,
								snap: this.options.snap ? this.abnormaliseRaw(this.options.snap + this.options.min) : null,
								label: "+",
								minSize: this.options.minSize ? this.abnormaliseRaw(this.options.minSize + this.options.min) : null,
								rangeClass: this.options.rangeClass
							}));
							var r = this.findGap([s, s + i]),
								l = this;
							this.one("addrange", function (t, e, i) {
								i.one("mouseup", function () {
									l.trigger("change", [l.val(), i])
								})
							}), (!this.options.minSize || this.calcGap(r) >= this.options.minSize) && (this.insertRangeIndex(this.phantom, r, !0), this.phantom.val([s, s + i], {
								trigger: !1
							}))
						}
					},
					svgAfterLoad: function () {
						console.log("hi")
					}
				});
			p.defaults = {
				min: 0,
				max: 100,
				valueFormat: function (t) {
					return t
				},
				valueParse: function (t) {
					return t
				},
				maxRanges: 1 / 0,
				readonly: !1,
				bgLabels: 0,
				deleteTimeout: 5e3,
				allowDelete: !1,
				vertical: !1,
				htmlLabel: !1,
				allowSwap: !0
			}, i.exports = p
		},
		{
			"./element": 1,
			"./eventprop": 2,
			"./indicator": 3,
			"./mark.js": 4,
			"./phantom": 5,
			"./range": 7,
			"./vertical": 9
		}],
		9: [function (t, e) {
			e.exports = {
				isVertical: function () {
					return this.options.vertical
				},
				ifVertical: function (t, e) {
					return this.isVertical() ? t : e
				},
				edge: function (t) {
					if ("start" === t) return this.ifVertical("top", "left");
					if ("end" === t) return this.ifVertical("bottom", "right");
					throw new TypeError("What kind of an edge is " + t)
				},
				totalSize: function () {
					return this.$el[this.ifVertical("height", "width")]()
				},
				edgeProp: function (t, e) {
					var i = this.$el[e]();
					return i[this.edge(t)]
				},
				startProp: function (t) {
					return this.edgeProp("start", t)
				},
				endProp: function (t) {
					return this.edgeProp("end", t)
				}
			}
		},
		{}],
		10: [function (t, e, i) {
			(function () {
				function t(t, e) {
					function i() {}
					return i.prototype = (t.superclass = e).prototype, (t.prototype = new i).constructor = t, "function" == typeof e.extended && e.extended(t), t
				}
				function n(t, e) {
					var i = {}.hasOwnProperty;
					for (var n in e) i.call(e, n) && (t[n] = e[n]);
					return t
				}!
				function (t) {
					switch (!1) {
					case !("function" == typeof define && null != define.amd):
						return define([], t);
					case "object" != typeof i:
						return e.exports = t();
					default:
						return this.Base = t()
					}
				}(function () {
					var e;
					return e = function () {
						function e() {}
						e.displayName = "Base";
						var i, s = e.prototype;
						return i = function (t, e, i, n, s) {
							return t[e] = "function" == typeof i ?
							function () {
								var t = this;
								return i.superclass$ = s, i.super$ = function () {
									return n.apply(t, arguments)
								}, i.apply(this, arguments)
							} : i
						}, e.extend = function (s, a) {
							return null == a && (a = s), function (r) {
								function o() {
									var t = this instanceof l ? this : new l;
									return t.initialize.apply(t, arguments), t
								}
								function l() {}
								var h, p, u, c = t(n(o, r), r).prototype;
								n(o, e), "string" == typeof s && (o.displayName = s), l.prototype = c, c.initialize = function () {
									return null != r.prototype.initialize ? r.prototype.initialize.apply(this, arguments) : r.apply(this, arguments)
								};
								for (h in p = a) u = p[h], i(c, h, u, c[h], r);
								return o
							}(this)
						}, e.meta = function (t) {
							var e, n;
							for (e in t) n = t[e], i(this, e, n, this[e], this);
							return this
						}, s.initialize = function () {}, e
					}()
				})
			}).call(this)
		},
		{}]
	}, {}, [8])(8)
});
